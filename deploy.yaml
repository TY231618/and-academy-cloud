version: '1.0'
stages:
  - "clone"
  - "build"
  - "deploy-dev"
  - "deploy-staging"
steps:
  main_clone:
    type: "git-clone"
    description: "Cloning main repository..."
    repo: "TY231618/and-devops-101"
    revision: "${{CF_BRANCH}}"
    stage: "clone"
    git: github

  build:
    title: "Building Docker image"
    type: "build"
    registry: academy-dev
    image_name: "academy-dev"
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "Dockerfile"
    stage: "build"

  Push-dev:
    title: "Pushing image to ECR"
    stage: "deploy-dev"
    type: "push"
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    registry: "academy-dev"
    candidate: "${{build}}"

  DeployDevToFargate:
    stage: "deploy-dev"
    image: codefreshplugins/cf-deploy-ecs
    commands:
      - cfecs-update ${{REGION}} ${{ECS_CLUSTER_NAME}} ${{ECS_SERVICE_NAME}} --image-name ${{IMAGE_PREFIX_DEV}}/${{IMAGE}} --image-tag '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    environment:
      - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID_DEV}}
      - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY_DEV}}

  Push-staging:
    title: "Pushing image to ECR"
    stage: "deploy-staging"
    type: "push"
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    registry: "academy-staging"
    candidate: "${{build}}"
    
  DeployStagingToFargate:
    stage: "deploy-staging"
    image: codefreshplugins/cf-deploy-ecs
    commands:
      - cfecs-update ${{REGION}} ${{ECS_CLUSTER_NAME_STAGING}} ${{ECS_SERVICE_NAME_STAGING}} --image-name ${{IMAGE_PREFIX_DEV_STAGING}}/${{IMAGE}} --image-tag '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    environment:
      - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID_STAGING_STAGING}}